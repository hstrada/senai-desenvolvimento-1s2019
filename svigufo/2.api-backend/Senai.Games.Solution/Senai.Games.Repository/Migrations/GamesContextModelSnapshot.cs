// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Senai.Games.Repository.Context;

namespace Senai.Games.Repository.Migrations
{
    [DbContext(typeof(GamesContext))]
    partial class GamesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Senai.Games.Domain.Domains.EstudioDomain", b =>
                {
                    b.Property<int>("EstudioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeEstudio")
                        .IsRequired()
                        .HasColumnName("NomeEstudio")
                        .HasColumnType("varchar(150)");

                    b.HasKey("EstudioId");

                    b.ToTable("Estudios");

                    b.HasData(
                        new { EstudioId = 1, NomeEstudio = "Square Enix" },
                        new { EstudioId = 2, NomeEstudio = "Blizzard" },
                        new { EstudioId = 3, NomeEstudio = "Rockstar Studios" }
                    );
                });

            modelBuilder.Entity("Senai.Games.Domain.Domains.JogoDomain", b =>
                {
                    b.Property<int>("JogoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataLancamento");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("Descricao")
                        .HasColumnType("Text");

                    b.Property<int>("EstudioId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Valor");

                    b.HasKey("JogoId");

                    b.HasIndex("EstudioId");

                    b.ToTable("Jogos");

                    b.HasData(
                        new { JogoId = 1, DataLancamento = new DateTime(2012, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "É um jogo que contém bastante ação e é viciante, seja você um novato ou um fã", EstudioId = 2, Nome = "Diablo 3", Valor = 99.00m },
                        new { JogoId = 2, DataLancamento = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), Descricao = "Jogo eletrônico de ação-aventura western", EstudioId = 3, Nome = "Red Dead Redemption II", Valor = 120.00m }
                    );
                });

            modelBuilder.Entity("Senai.Games.Domain.Domains.UsuarioDomain", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TipoUsuario")
                        .HasColumnName("TipoUsuario")
                        .HasColumnType("varchar(150)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new { UsuarioId = 1, Email = "admin@admin.com", Senha = "admin", TipoUsuario = "ADMINISTRADOR" },
                        new { UsuarioId = 2, Email = "cliente@cliente.com", Senha = "cliente", TipoUsuario = "CLIENTE" }
                    );
                });

            modelBuilder.Entity("Senai.Games.Domain.Domains.JogoDomain", b =>
                {
                    b.HasOne("Senai.Games.Domain.Domains.EstudioDomain", "Estudio")
                        .WithMany("Games")
                        .HasForeignKey("EstudioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
