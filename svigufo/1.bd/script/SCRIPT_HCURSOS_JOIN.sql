INSERT INTO CATEGORIAS VALUES ('DESIGN'), ('MARKETING'), ('INFORMÁTICA'), ('DESENVOLVIMENTO'), ('GESTAO');

INSERT INTO ALUNOS VALUES ('GABRIEL'), ('JOAO'), ('GABRIELA');

INSERT INTO PROFESSORES VALUES ('FERNANDO'), ('HELENA'), ('ROBERTO'), ('TSUKAMOTO');

SELECT * FROM CATEGORIAS;
SELECT * FROM PROFESSORES;

-- FERNANDO APLICA OS DOIS CURSOS DE SQL
INSERT INTO CURSOS (NOME, TITULO, ID_CATEGORIA, ID_PROFESSOR) VALUES ('SQL', 'SQL BÁSICO - PARTE 1', 4, 1);
INSERT INTO CURSOS (NOME, TITULO, ID_CATEGORIA, ID_PROFESSOR) VALUES ('SQL', 'SQL BÁSICO - PARTE 2', 4, 1);

INSERT INTO CURSOS (NOME, TITULO, ID_CATEGORIA, ID_PROFESSOR) VALUES ('JAVA', 'JAVA BÁSICO - PARTE 2', 4, 2);
INSERT INTO CURSOS (NOME, TITULO, ID_CATEGORIA, ID_PROFESSOR) VALUES ('REACT', 'REACT NATIVE - PARTE 1', 4, 2);

INSERT INTO CURSOS (NOME, TITULO, ID_CATEGORIA, ID_PROFESSOR) VALUES ('GESTÃO', 'GESTÃO DE PESSOAS', 5, 3);

SELECT * FROM CURSOS;

INSERT INTO CURSOS_ALUNOS (ID_CURSO, ID_ALUNO) VALUES (1, 1);
INSERT INTO CURSOS_ALUNOS (ID_CURSO, ID_ALUNO) VALUES (1, 2);
INSERT INTO CURSOS_ALUNOS (ID_CURSO, ID_ALUNO) VALUES (3, 2);

-- TRÁS TODOS OS REGISTROS COM WHERE
SELECT *
    FROM CURSOS, PROFESSORES
    WHERE CURSOS.ID_PROFESSOR = PROFESSORES.ID;

-- FAZ A INTERSECÇÃO DE CURSOS E PROFESSORES
SELECT *
    FROM CURSOS INNER JOIN PROFESSORES
    ON CURSOS.ID_PROFESSOR = PROFESSORES.ID;

-- FAZ A INTERSECÇÃO DE CURSOS E PROFESSORES UTILIZANDO AS PARA COLOCAR UM APELIDO
SELECT *
    FROM CURSOS AS C INNER JOIN PROFESSORES AS P
    ON C.ID_PROFESSOR = P.ID;

-- FAZ A INTERSECÇÃO DE CURSOS E PROFESSORES SEM AS
SELECT *
    FROM CURSOS C INNER JOIN PROFESSORES P
    ON C.ID_PROFESSOR = P.ID;

-- SELECIONA SOMENTE AS COLUNAS CORRESPONDENTES
SELECT C.TITULO, P.NOME
    FROM CURSOS C INNER JOIN PROFESSORES P
    ON C.ID_PROFESSOR = P.ID;

-- SELECIONA SOMENTE AS COLUNAS CORRESPONDENTES COLOCANDO UM APELIDO
SELECT C.TITULO, P.NOME AS NOME_PROFESSOR, C.NOME AS NOME_CURSO
    FROM CURSOS C INNER JOIN PROFESSORES P
    ON C.ID_PROFESSOR = P.ID;

-- SELECIONA TODOS OS CURSOS E SEUS RESPECTIVOS DADOS
SELECT *
    FROM CURSOS C LEFT JOIN PROFESSORES P
    ON C.ID_PROFESSOR = P.ID;

-- SELECIONA TODOS OS CURSOS E TRÁS TODOS OS PROFESSORES MESMO QUE ELES NÃO TENHAM CORRESPONDÊNCIA
SELECT *
    FROM CURSOS C RIGHT JOIN PROFESSORES P
    ON C.ID_PROFESSOR = P.ID;

-- BUSCA TODOS OS PROFESSORES E SEUS RESPECTIVOS CURSOS. BUSCA MESMO QUE OS PROFESSORES NÃO TENHAM CURSOS
SELECT *
    FROM PROFESSORES P LEFT JOIN CURSOS C
    ON P.ID = C.ID_PROFESSOR;